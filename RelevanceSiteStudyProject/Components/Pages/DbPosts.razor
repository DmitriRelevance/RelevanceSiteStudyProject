@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Identity
@using RelevanceSiteStudyProject.Core.Entities
@using RelevanceSiteStudyProject.Interfaces
@using RelevanceSiteStudyProject.Helpers
@using RelevanceSiteStudyProject.Services
@using RelevanceSiteStudyProject.ViewModels
@inject SignInManager<Data.User> SignInManager
@inject UserManager<Data.User> UserManager
@inject NavigationManager Navigation
@inject IHttpContextAccessor HttpContextAccessor
@inject IPostService _postService
@inject ILogger<DbPosts> _logger
@inject NotificationService NotificationService
@rendermode InteractiveServer
@page "/db-posts"

<FluentCard Style="padding: 20px;">
    <h1>Db Posts</h1>


    @if (showNotification)
    {
        <Notification IsVisible=@showNotification Message="@(Notification?.Message)" Type="@(Notification?.Type ?? Pages.Notification.NotificationInfoType.Info)" OnClose="CloseNotification">

        </Notification>
    }

    @if (currentUser is not null)
    {
        <h2>Welcome, @currentUser.Name!</h2>


        <FluentCard Style="padding: 20px;">
            <EditForm Model="@postModel" OnValidSubmit="CreatePost">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div>
                    <h3>Write a new post</h3>
                    <div>
                        <label for="postTitle">Title</label>
                        <InputText id="postTitle" class="form-control" @bind-Value="postModel.Title" placeHolder="Title"></InputText>
                    </div>
                    <div>
                        <label for="postContent">Content</label>
                        <InputTextArea id="postContent" class="form-control" @bind-Value="postModel.Content" placeHolder="Content"></InputTextArea>
                    </div>
                    <button type="submit" class="btn btn-primary mt-2">Create Post</button>
                </div>
            </EditForm>
        </FluentCard>

    }

</FluentCard>

<FluentCard Style="margin-top: 30px; padding: 20px;">

    <h3>Posts</h3>

    @if (@isLoading)
    {
        <p>Loading posts...</p>
    }
    else if (posts.Count == 0)
    {
        <FluentMessageBar Intent="MessageIntent.Warning">No posts available.</FluentMessageBar>
    }
    else
    {
        <ul class="list-group">
            @foreach (var post in posts)
            {
                <FluentCard Style="margin-top: 10px; padding: 15px;">
                    <li class="list-group-item">
                        <h5>@post.Title</h5>
                        <p>@post.Content</p>
                        @if (currentUser != null && (currentUser.IsAdmin || post.UserId.Equals(currentUser.Id)))
                        {
                            <FluentButton @onclick="() => EditPost(post)">Edit</FluentButton>
                            <FluentButton Appearance="Appearance.Accent" Style="margin-left: 10px;" @onclick="() => DeletePost(post)">Delete</FluentButton>

                            @if (isEditing && postToEdit?.Id == post.Id)
                            {
                                <div>
                                    <h3>Edit Post</h3>
                                    <div>
                                        <label for="postTitle">Title</label>
                                        <InputText id="postTitle" class="form-control" @bind-Value="postToEdit.Title"></InputText>
                                    </div>
                                    <div>
                                        <label for="postContent">Content</label>
                                        <InputTextArea id="postContent" class="form-control" @bind-Value="postToEdit.Content"></InputTextArea>
                                    </div>
                                    <button type="submit" class="btn btn-primary mt-2" @onclick=SaveEdit>Save changes</button>
                                    <button class="btn btn-secondary mt-2" @onclick="CancelEdit">Cancel</button>
                                </div>
                            }
                        }
                    </li>
                </FluentCard>
            }
        </ul>
    }

</FluentCard>

@code {

    private void CloseNotification()
    {
        Notification = null;
    }
}
