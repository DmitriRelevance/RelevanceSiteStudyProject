@page "/login"
@using Microsoft.AspNetCore.Identity
@using RelevanceSiteStudyProject.Core.DTOs
@using RelevanceSiteStudyProject.Core.Entities
@using RelevanceSiteStudyProject.Core.Interfaces
@rendermode InteractiveServer
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@inject NavigationManager Navigation
@inject HttpClient _httpClient
@inject ITokenProvider _tokenProvider
@inject LogInApiClient _logInApiClient

<h3>Login form</h3>

<EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="loginModel.Email" />
    </div>
    <div>
        <label for="password">Password</label>
        <InputText type="password" id="password" @bind-Value="loginModel.Password" />
    </div>

    <button type="submit">Login</button>
</EditForm>

@code {
    private LoginModel loginModel = new LoginModel();
    private async Task HandleLogin()
    {
        try
        {
            var loginDto = new LoginDto
            {
                Email = loginModel.Email,
                Password = loginModel.Password
            };

            var logInResult = await _logInApiClient.LogInAsync(loginDto);
            if (!string.IsNullOrWhiteSpace(logInResult))
            {
                Navigation.NavigateTo($"/signin-handler?email={Uri.EscapeDataString(loginModel.Email)}", true);
                await _tokenProvider.SetTokenAsync(logInResult);
                Navigation.NavigateTo("/");
            }
            else
            {
                Console.WriteLine("Login failed");
            }
            return;
        }
        catch (Exception EX)
        {
            Console.WriteLine(EX.Message);
            throw;
        }
    }

    public class LoginModel
    {
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }
}
