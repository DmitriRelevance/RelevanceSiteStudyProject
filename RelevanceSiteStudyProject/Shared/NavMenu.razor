@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Identity
@using RelevanceSiteStudyProject.Data
@using RelevanceSiteStudyProject.Shared
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject SignInManager<Data.User> SignInManager
@inject UserManager<Data.User> UserManager
@inject NavigationManager Navigation

<ul class="nav">
    <li class="nav-item">
        <NavLink class="nav-link text-white" href="/">Home</NavLink>
    </li>
    <li class="nav-item">
        <NavLink class="nav-link text-white" href="/pagination-posts">Pagination</NavLink>
    </li>
    <li class="nav-item">
        <NavLink class="nav-link text-white" href="/scroll-posts">Infinite Scroll</NavLink>
    </li>
    <li class="nav-item">
        <NavLink class="nav-link text-white" href="/db-posts">Database Posts</NavLink>
    </li>

    @if (!isAuthorized)
    {
        <li class="nav-item">
            <NavLink class="nav-link text-white" href="/login">Login</NavLink>
        </li>
    }
    else
    {
        <li class="nav-item">
            <NavLink class="nav-link text-white" href="/logout">Logout</NavLink>
        </li>
    }
</ul>


@code {
    private bool isAuthorized;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        isAuthorized = user.Identity?.IsAuthenticated ?? false;
    }
}